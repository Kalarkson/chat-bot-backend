package main

import (
    "log"

    "chat-bot-backend/config"
    "chat-bot-backend/database"
    "chat-bot-backend/handlers"

    "github.com/gin-gonic/gin"
    "github.com/gin-contrib/cors" // üëà –î–û–ë–ê–í–¨ –≠–¢–û–¢ –ò–ú–ü–û–†–¢
)

func main() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config.LoadConfig()

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    if err := database.ConnectDB(); err != nil {
        log.Fatal("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:", err)
    }
    defer database.DisconnectDB()

    // –°–æ–∑–¥–∞–µ–º Gin —Ä–æ—É—Ç–µ—Ä
    r := gin.Default()

    // üëà –î–û–ë–ê–í–¨ CORS middleware –ü–ï–†–ï–î –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
    r.Use(cors.New(cors.Config{
        AllowOrigins:     []string{"http://localhost:3000"}, // URL —Ç–≤–æ–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"},
        AllowHeaders:     []string{"Origin", "Content-Type", "Authorization"},
        AllowCredentials: true,
    }))

    // –ì—Ä—É–ø–ø–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    public := r.Group("/api/auth")
    {
        public.POST("/register", handlers.Register)
        public.POST("/login", handlers.Login)
    }

    // –ì—Ä—É–ø–ø–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    protected := r.Group("/api")
    {
        protected.GET("/profile", handlers.GetProfile)
    }

    // üëà –î–û–ë–ê–í–¨ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
    r.OPTIONS("/*path", func(c *gin.Context) {
        c.Status(200)
    })

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    port := ":" + config.AppConfig.Port
    log.Printf("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É %s", port)
    
    if err := r.Run(port); err != nil {
        log.Fatal("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err)
    }
}